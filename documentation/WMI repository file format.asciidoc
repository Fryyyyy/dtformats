= WMI repository file formats

:toc:
:toclevels: 4

:numbered!:
[abstract]
== Summary

The WMI repository, also known as the Common Information Model (CIM) repository,
holds the schema, also called the object repository or class store, that models
the managed environment and defines every piece of data exposed by WMI.

This document is intended as a working document for the WMI repository file
format specifications.

[preface]
== Document information

[cols="1,5"]
|===
| Author(s): | Joachim Metz <joachim.metz@gmail.com>
| Abstract: | This document contains information about the WMI repository file formats
| Classification: | Public
| Keywords: | OBJECTS.DATA, WMI repository
|===

[preface]
== License

....
Copyright (C) 2015-2022, Joachim Metz <joachim.metz@gmail.com>.
Permission is granted to copy, distribute and/or modify this document under the
terms of the GNU Free Documentation License, Version 1.3 or any later version
published by the Free Software Foundation; with no Invariant Sections, no
Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included
in the section entitled "GNU Free Documentation License".
....

[preface]
== Revision history

[cols="1,1,1,5",options="header"]
|===
| Version | Author | Date | Comments
| 0.0.1 | J.B. Metz | May 2015 | Initial version.
| 0.0.2 | J.B. Metz | November 2015 | Additional information about index binary-tree file format.
| 0.0.3 | J.B. Metz | November 2015 | Additional information about objects.data file format.
| 0.0.4 | J.B. Metz | February 2016 | Additional information about format used in Windows XP.
| 0.0.5 | J.B. Metz | March 2016 | Additional information about format used in Windows XP.
| 0.0.6 | J.B. Metz | April 2017 | Textual changes.
| 0.0.7 | J.B. Metz | May 2017 | Textual changes.
| 0.0.8 | J.B. Metz | Janunary 2022 | Additional information about format.
|===

:numbered:
== Overview

The WMI repository, also known as the Common Information Model (CIM) repository,
holds the schema, also called the object repository or class store, that models
the managed environment and defines every piece of data exposed by WMI.

The location and format of the WMI repository varies per Windows version.

=== Windows 9x/Me, NT 4 and 2000

In Windows 95 OSR 2.5, Windows 98, Windows Millennium Edition (Me) the CIM
repository can be found in the directory:

....
%WinDir%\System\Wbem\Repository\cim.rep
....

[yellow-background]*Determine format*

In Windows NT 4.0 with SP4 and Windows 2000 the CIM repository can be found in
the directory:

....
%SystemRoot%\System32\Wbem\Respository\
....

* `CIM.REC`;
* `CIM.REP`;

[yellow-background]*Determine format*

=== Windows XP and later

In Windows XP and Windows 2003 the CIM repository can be found in the directory:

....
%SystemRoot%\System32\WBEM\Repository\FS\
....

In Windows Vista and later the CIM repository can be found in the directory:

....
%SystemRoot%\System32\WBEM\Repository\
....

* `Index.btr`; index binary-tree file;
* `Index.map`; (optional) index mappings file;
* `Objects.data`; objects data file;
* `Objects.map`; objects mappings file;
* `Mapping#.map`; mappings file where # is:
** `[1-2]` in Windows XP and Windows 2003
** `[1-3]` in Windows Vista and later
* `Mapping.ver`; mappings version file contains # of the active mappings file.

[NOTE]
A copy of the CIM repository is stored in the system restore points.

=== Test version

Files created by the following version of programs were used to test the
information within this document:

* [yellow-background]*Windows 95*
* [yellow-background]*Windows 98*
* [yellow-background]*Windows Me*
* [yellow-background]*Windows NT4*
* Windows 2000
* Windows XP
* Windows 2003
* Windows Vista
* Windows 2008
* Windows 7
* Windows 2012
* Windows 8
* Windows 10
* Windows 11

== The index binary-tree file (index.btr)

The index binary-tree file (index.btr) consists of:

* an array of pages

=== Index binary-tree page

The index binary-tree page is 8192 bytes of size and consists of:

* a page header
* [yellow-background]*Unknown*
* sub pages
* page key offsets
* page key data
* page value offsets
* page value data
* padding (0-byte values)

=== Index binary-tree page header

The index binary-tree page header is 16 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Index page type +
See section: <<index_binary_tree_page_types,Index binary-tree page types>>
| 4 | 4 | | Mapped page number +
The page number is mapped to the in-file page number via the index mappings file
| 8 | 4 | | [yellow-background]*Unknown (empty values)*
| 12 | 4 | | Mapped root page number +
[yellow-background]*Only set in the administrative page and 0 otherwise?* +
The page number is mapped to the in-file page number via the index mappings file
|===

=== [[index_binary_tree_page_types]]Index binary-tree page types

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0000 | | [yellow-background]*Unknown*
| 0xaccc | | [yellow-background]*Unknown (Is active)*
| 0xaddd | | [yellow-background]*Unknown (Is administrative)*
| 0xbadd | | [yellow-background]*Unknown (Is deleted)*
|===

=== Index binary-tree active page body

The index binary-tree active page body is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of keys
| 4 | number of keys x 4 | | Array of unknown +
See section: <<index_binary_tree_page_unknown_array,Index binary-tree page unknown array>>
| ... | (number of keys + 1) x 4 | | Array of sub pages +
See section: <<index_binary_tree_page_sub_pages_array,Index binary-tree page sub pages array>>
| ... | number of keys x 2 | | Array of key offsets +
See section: <<index_binary_tree_page_key_offset_array,Index binary-tree page key offsets array>>
| ... | ... | | Key data
| ... | 2 | | Number of values
| ... | number of values x 2 | | Array of value offsets +
See section: <<index_binary_tree_page_value_offset_array,Index binary-tree page value offsets array>>
| ... | 2 | | Value data size +
Contains the number of bytes
| ... | ... | | Value data
|===

==== [[index_binary_tree_page_unknown_array]]Index binary-tree page unknown array

The index binary-tree page unknown array is variable of size and consists of:

* number of keys x size of [yellow-background]*Unknown array entry*

The unknown entry is 4 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Unknown (empty values)*
|===

==== [[index_binary_tree_page_sub_pages_array]]Index binary-tree page sub pages array

The index binary-tree page sub pages array is variable of size and consists of:

* (number of keys + 1) x size of mapped sub page number

The mapped sub page number is 4 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Mapped sub page number +
The page number is mapped to the in-file page number via the index mappings file
|===

==== [[index_binary_tree_page_key_offset_array]]Index binary-tree page key offsets array

The index binary-tree page key offsets are variable of size and consist of:

* number of keys x size of offset

The offset is 2 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | key data offset +
The offset is relative to the start of the index binary-tree page key data
|===

==== Index binary-tree page key data

The index binary-tree page key data is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | The number of page key segment indexes
| 2 | ... | | Array 16-bit page key segment indexes
|===

The page key segment indexes refer to page values where a page key consists of
multiple page values e.g.

....
\ VALUE1 \ VALUE2 \ VALUE3
....

==== [[index_binary_tree_page_value_offset_array]]Index binary-tree page value offsets array

The index binary-tree page value offsets array is variable of size and consist of:

* number of values x size of offset

The offset is 2 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | value data offset +
The offset is relative to the start of the index binary-tree page value data
|===

== Index.map, Mapping#.map and Objects.map

Windows XP and Windows 2003 use the following version 1 mapping files:

* `Index.map` to map "virtual" page numbers to "physical" page numbers in `Index.btr`
* `Objects.map` to map "virtual" page numbers to "physical" page numbers in `Objects.data`
* `Mapping[1-2].map` contains a backup of the information in `Objects.map`

A version 1 mapping file consists of:

* version 1 file header
* index or objects mapping table
* unknown table, presumably used for free space tracking
* version 1 file footer

In Windows Vista the information of `Index.map` and `Objects.map` was moved
into a single version 2 mapping file where `Mapping[1-3].map` contain multiple
backups.

A version 2 mapping file consists of:

* version 2 file header
* index or objects mapping table
* unknown table, presumably used for free space tracking
* version 1 file footer
* version 2 file header
* unknown mapping table
* version 2 file footer

=== File header

==== File header - version 1

The file header  - version 1 is 12 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 0x0000abcd | [yellow-background]*Unknown (signature)*
| 4 | 4 | | Sequence number
| 8 | 4 | | Number of pages
|===

==== File header - version 2

The file header  - version 2 is 20 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 0x0000abcd | [yellow-background]*Unknown (signature)*
| 4 | 4 | | Sequence number
| 8 | 4 | | [yellow-background]*Unknown (current identifier)*
| 12 | 4 | | [yellow-background]*Unknown (previous identifier)*
| 16 | 4 | | Number of pages
|===

=== Mapping table

The mapping table is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of entries
| 4 | ... | | Array of entries
|===

=== Mapping table entry - version 1

The mapping table entry - version 1 is 24 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Page number
|===

[yellow-background]*TODO: what about MSB in the page number*
[yellow-background]*TODO: 0xffffffff unavailable*

=== Mapping table entry - version 2

[yellow-background]*TODO: check?*

The mapping table entry - version 2 is 24 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Page number
| 4 | 4 | | [yellow-background]*Unknown (checksum)* +
[yellow-background]*Contains a CRC-32?*
| 8 | 4 | | [yellow-background]*Unknown (free space?)*
| 12 | 4 | | [yellow-background]*Unknown (used space?)*
| 16 | 4 | | [yellow-background]*Unknown (related to identifiers in the header)*
| 20 | 4 | | [yellow-background]*Unknown (related to identifiers in the header)*
|===

[yellow-background]*TODO: what about MSB in page number*

=== Unknown table

The unknown table is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of entries
| 4 | ... | | Array of 32-bit entries
|===

=== File footer

==== File footer - version 1

The file footer - version 1 is 4 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 0x0000dcba | [yellow-background]*Unknown (signature)*
|===

==== File footer - version 2

The file footer - version 2 is 8 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 0x0000dcba | [yellow-background]*Unknown (signature)*
| 4 | 4 | 1 | [yellow-background]*Unknown*
|===

== Mapping.ver

The `Mapping.ver` file is used in Windows XP and Windows 2003 to indicate the
active `Mapping#.map` file.

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | The active mapping file.
|===

== Objects.data

The Objects.data file consists of:

* an array of pages

=== Objects data page

The objects data page is 8192 bytes of size and consists of:

* Object descriptors
* [yellow-background]*unknown records*
* [yellow-background]*unknown*

[cols="1,5",options="header"]
|===
| Characteristics | Description
| Byte order | little-endian
| Date and time values | FILETIME in UTC
| Character strings | ASCII strings are Single Byte Character (SBC) or Multi Byte Character (MBC) string stored with a codepage. Sometimes referred to as ANSI string representation. +
Though technically maybe incorrect, this document will use term (extended) ASCII string. +
Unicode strings are stored in UTF-16 little-endian without the byte order mark (BOM).
|===

==== Object descriptors

The object descriptors consists of:

* an array of object descriptor
* empty (zero byte filled) object descriptor (or terminator)

===== Object descriptor

The object descriptor is 16 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Identifier
| 4 | 4 | | Data offset +
The offset is relative to the start of the object descriptors
| 8 | 4 | | Data size
| 12 | 4 | | Data checksum +
Contains a CRC-32 with polynomial 0xedb88320 and initial value 0 of the object record data
|===

==== Object records

The object record is defined by the object descriptor and its structure depends
on the data type.

If the object record data is larger than the page size of 8196 the remaining
data is stored spanning multiple pages. Successive pages do not contain object
descriptors and must resolved using mapped page numbers.

===== Class definition (CD)

The class definition is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Super class name string size +
Contains the number of UTF-16 characters (16-bit values)
| 4 | ... | | Super class name string +
Contains an UTF-16 little-endian string without end-of-string character.
| ... | 8 | | [yellow-background]*Unknown (date and time)* +
Contains a FILETIME
| ... | 4 | | Data size +
Includes the 4 bytes of the size
| ... | ... | | Data
4+| _If remaining data size > 0_
| ... | 4 | | Methods block size
Includes the 4 bytes of the size
| ... | ... | | Methods block
|===

[yellow-background]*TODO: if the class name is empty it refers to __SystemClass?*

[yellow-background]*TODO: define data*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | [yellow-background]*Unknown (empty values?)*
| 1 | 4 | | Class name offset +
The offset is relative to the start of the properties block data +
See section: <<cim_string,CIM string>>
| 5 | 4 | | [yellow-background]*Unknown (Default values size?)*
| 9 | 4 | | Super class name block size +
Includes the 4 bytes of the size
| 14 | ... | | Super class name block
| ... | 4 | | Qualifiers block size
Includes the 4 bytes of the size
| ... | ... | | Qualifiers block +
See section: <<qualifiers_block,qualifiers block>>
| ... | 4 | | Number of property descriptors
| ... | ... | | Property descriptors array +
See section: <<property_descriptor,Property descriptor>>
| ... | ... | |  [yellow-background]*Unknown (Default values data? bitmap?)*
| ... | 4 | | Properties block size
Does not include the 4 bytes of the size +
[yellow-background]*TODO: What is the MSB used for?*
| ... | ... | | Properties block
|===

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | [yellow-background]*Unknown (string type/flags?)*
| 1 | ... | | Super class name string +
Contains a string with end-of-string character
| ... | 4 | | Super class name string size +
[yellow-background]*Contains a value in bytes?*
|===

....
0x00000000  00 00 00 00 00 00 00 00  00 04 00 00 00           ................
0x00000000                                          0f 00 00  ................
0x00000010  00 0e 00 00 00 00 0b 00  00 00 ff ff 00 00 00 00  ................
0x00000020  18 00 00 80 00 4d 53 54  61 70 65 44 72 69 76 65  .....MSTapeDrive
0x00000030  72 00 00 61 62 73 74 72  61 63 74 00              r..abstract.
....

==== [[qualifiers_block]]Qualifiers block

The class qualifiers block is variable of size and consists of:

* zero or more qualifier descriptors

===== Qualifier descriptor

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Qualifier name string offset +
The offset is relative to the start of the properties block data +
If the MSB is set the name is predefined and the remainder of the value contains the name index +
See section: <<cim_string,CIM string>> and <<predefined_names,predefined names>>
| 4 | 1 | 0x80 | [yellow-background]*Unknown*
| 5 | 4 | | Qualifier value data type (CimType) +
See section: <<cim_data_types,CIM data types>>
| 9 | ... | | Inline stored value or 32-bit offset to value data
|===

[NOTE]
The qualifier name is case insensitive.

==== [[property_descriptor]]Property descriptor

The property descriptor is 8 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Property name offset +
The offset is relative to the start of the properties block data +
If the MSB is set the name is predefined and the remainder of the value contains the name index
See section: <<cim_string,CIM string>> and <<predefined_names,predefined names>>
| 4 | 4 | | Property definition offset +
The offset is relative to the start of the properties block data +
See section: <<property_definition,Property definition>>
|===

===== [[property_definition]]Property definition

The property defintion is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Property data type (CimType) +
See section: <<cim_data_types,CIM data types>>
| 4 | 2 | | [yellow-background]*Unknown (index?)*
| 6 | 4 | | [yellow-background]*Unknown (offset?)*
| 10 | 4 | | [yellow-background]*Unknown (level?)*
| 14 | 4 | | Qualifiers block size +
Includes the 4 bytes of the size
| 18 | ... | | Qualifiers block +
See section: <<qualifiers_block,qualifiers block>>
|===

*TODO: seen other multiple optional strings e.g. "WmiDataId" and "WmiSizeIs"*

==== [[predefined_names]]Predefined names

[cols="1,1,1,5",options="header"]
|===
| Name index | Name | Data type | Description
| 1 | "key" | CIM-TYPE-BOOLEAN |
4+|
| 3 | "read" | CIM-TYPE-BOOLEAN |
| 4 | "write" | CIM-TYPE-BOOLEAN |
| 5 | [yellow-background]*Unknown (volatile?)* | |
| 6 | "provider" | CIM-TYPE-STRING +
CIM-TYPE-REFERENCE |
| 7 | "dynamic" | CIM-TYPE-BOOLEAN |
4+|
| 10 | "type" | CIM-TYPE-STRING |
|===

=== Registration (R)

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Name space string size +
Contains the number of UTF-16 characters (16-bit values)
| 4 | ... | | Name space string +
Contains an UTF-16 little-endian string without end-of-string character.
| ... | 4 | | Class string size +
Contains the number of UTF-16 characters (16-bit values)
| ... | ... | | Class string +
Contains an UTF-16 little-endian string without end-of-string character.
| ... | 4 | | Attribute name string size +
Contains the number of UTF-16 characters (16-bit values)
| ... | ... | | Attribute name string +
Contains an UTF-16 little-endian string without end-of-string character.
| ... | 4 | | Attribute value string size +
Contains the number of UTF-16 characters (16-bit values)
| ... | ... | | Attribute value string +
Contains an UTF-16 little-endian string without end-of-string character.
| ... | 8 | | [yellow-background]*Unknown (empty values or unused strings?)*
|===

[NOTE]
The attribute value contians a CIM key

....
0x00000000  09 00 00 00 52 00 4f 00  4f 00 54 00 5c 00 52 00  ....R.O.O.T.\.R.
0x00000010  53 00 4f 00 50 00                                 S.O.P....._._.M.

0x00000010                    1c 00  00 00 5f 00 5f 00 4d 00  S.O.P....._._.M.
0x00000020  65 00 74 00 68 00 6f 00  64 00 50 00 72 00 6f 00  e.t.h.o.d.P.r.o.
0x00000030  76 00 69 00 64 00 65 00  72 00 52 00 65 00 67 00  v.i.d.e.r.R.e.g.
0x00000040  69 00 73 00 74 00 72 00  61 00 74 00 69 00 6f 00  i.s.t.r.a.t.i.o.
0x00000050  6e 00                                             n.....p.r.o.v.i.

0x00000050        08 00 00 00 70 00  72 00 6f 00 76 00 69 00  n.....p.r.o.v.i.
0x00000060  64 00 65 00 72 00                                 d.e.r.k...\.N.S.

0x00000060                    6b 00  00 00 5c 00 4e 00 53 00  d.e.r.k...\.N.S.
0x00000070  5f 00 31 00 45 00 36 00  41 00 33 00 38 00 41 00  _.1.E.6.A.3.8.A.
0x00000080  30 00 36 00 45 00 37 00  36 00 39 00 39 00 32 00  0.6.E.7.6.9.9.2.
0x00000090  37 00 43 00 37 00 43 00  32 00 31 00 30 00 42 00  7.C.7.C.2.1.0.B.
0x000000a0  45 00 45 00 46 00 34 00  37 00 32 00 43 00 46 00  E.E.F.4.7.2.C.F.
0x000000b0  38 00 5c 00 4b 00 49 00  5f 00 46 00 34 00 30 00  8.\.K.I._.F.4.0.
0x000000c0  32 00 37 00 35 00 33 00  43 00 34 00 42 00 37 00  2.7.5.3.C.4.B.7.
0x000000d0  38 00 43 00 37 00 46 00  33 00 36 00 33 00 42 00  8.C.7.F.3.6.3.B.
0x000000e0  34 00 35 00 42 00 36 00  32 00 43 00 38 00 43 00  4.5.B.6.2.C.8.C.
0x000000f0  42 00 33 00 31 00 33 00  46 00 5c 00 49 00 5f 00  B.3.1.3.F.\.I._.
0x00000100  38 00 37 00 32 00 33 00  30 00 37 00 38 00 46 00  8.7.2.3.0.7.8.F.
0x00000110  45 00 43 00 39 00 33 00  41 00 46 00 33 00 39 00  E.C.9.3.A.F.3.9.
0x00000120  36 00 38 00 32 00 41 00  34 00 30 00 35 00 35 00  6.8.2.A.4.0.5.5.
0x00000130  42 00 30 00 37 00 31 00  30 00 45 00 46 00 43 00  B.0.7.1.0.E.F.C.

0x00000140  00 00 00 00 00 00 00 00                           ........
....

=== [[cim_data_types]]CIM data types

According to MSDN:

[quote]
____
CimType is a 32-bit value of which only the lower 16 bits are used.
____

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000000 | | [yellow-background]*None (Confirm this)* +
A null value
| | |
| 0x00000002 | CIM-TYPE-SINT16 | A signed 16-bit integer
| 0x00000003 | CIM-TYPE-SINT32 | A signed 32-bit integer
| 0x00000004 | CIM-TYPE-REAL32 | A floating-point 32-bit number
| 0x00000005 | CIM-TYPE-REAL64 | A floating-point 64-bit number
| | |
| 0x00000008 | CIM-TYPE-STRING | A string
| | |
| 0x0000000b | CIM-TYPE-BOOLEAN | A boolean +
Stored as a 16-bit value
| | |
| 0x0000000d | CIM-TYPE-OBJECT | [yellow-background]*An embedded object.*
| | |
| 0x00000010 | CIM-TYPE-SINT8 | A signed 8-bit integer
| 0x00000011 | CIM-TYPE-UINT8 | An unsigned 8-bit integer
| 0x00000012 | CIM-TYPE-UINT16 | An unsigned 16-bit integer
| 0x00000013 | CIM-TYPE-UINT32 | An unsigned 32-bit integer
| 0x00000014 | CIM-TYPE-SINT64 | A signed 64-bit integer
| 0x00000015 | CIM-TYPE-UINT64 | An unsigned 64-bit integer
| | |
| 0x00000065 | CIM-TYPE-DATETIME | A date or time value +
Contains a string in DMTF date/time format: yyyymmddHHMMSS.mmmmmmsUUU +
where yyyymmdd is the date in year/month/day; +
HHMMSS is the time in hours/minutes/seconds; +
mmmmmm is the number of microseconds in 6 digits; +
and sUUU is a sign (+ or -) and a 3-digit UTC offset
| 0x00000066 | CIM-TYPE-REFERENCE | A reference to another object. +
[yellow-background]*This is represented by a string containing the path to the referenced object.* +
[yellow-background]*This value maps to the signed 16-bit integer type (CIM-TYPE-SINT16). (Confirm this)*
| 0x00000067 | CIM-TYPE-CHAR16 | A 16-bit character
| | |
| 0x00002000 | | The array (or multi-value) flag. +
Array property types are identified with CIM-ARRAY instead of CIM-TYPE e.g. CIM-ARRAY-UINT8
| 0x00004000 | | [yellow-background]*Unknown flag*
|===

==== [[cim_string]]CIM string

The CIM string is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | [yellow-background]*Unknown (string type/flags?)*
| 1 | ... | | Property name string +
Contains a string with end-of-string character
|===

=== Interface (I and IL)

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 64 | | String digest hash +
Contains an UTF-16 little-endian string without end-of-string character.
| 64 | 8 | | [yellow-background]*Unknown (date and time)* +
Contains a FILETIME
| 72 | 8 | | [yellow-background]*Unknown (date and time)* +
Contains a FILETIME
4+| _Data block_
| ... | 4 | | Data size +
Includes the 4 bytes of the size
| ... | ... | | Data
|===

....
0x00000000  00 00 00 00 00 2f 23 e8  00 00 00 00 00 00 00 00  ...../#.........
0x00000010  00 00 00 00 00 19 00 00  00 00 00 00 00 36 00 00  .............6..
0x00000020  00 00 00 00 00 01 00 00  00 00 00 00 00 00 00 00  ................
0x00000030  00 00 00 00 00 00 00 31  00 00 00 04 00 00 00 01  .......1........
0x00000040  4f 00 00 80                                       O....NTEventLogE

0x00000040              00 4e 54 45  76 65 6e 74 4c 6f 67 45  O....NTEventLogE
0x00000050  76 65 6e 74 43 6f 6e 73  75 6d 65 72 00           ventConsumer..SC

0x00000050                                          00 53 43  ventConsumer..SC
0x00000060  4d 20 45 76 65 6e 74 20  4c 6f 67 20 43 6f 6e 73  M Event Log Cons
0x00000070  75 6d 65 72 00                                    umer..sid..Servi

0x00000070                 00 73 69  64 00                    umer..sid..Servi

0x00000070                                 00 53 65 72 76 69  umer..sid..Servi
0x00000080  63 65 20 43 6f 6e 74 72  6f 6c 20 4d 61 6e 61 67  ce Control Manag
0x00000090  65 72 00                                          er.
....

== CIM repository

=== Notes

Mapped index page 0 references the administrative page in the index binary-tree

The root page number of the administrative page in the index binary-tree

....
Name space: ROOT\WMI
Class name: MSTapeDriver
....

....
Name space: NS_8DFCCA0B7FAB09C32755407485035A60
Class name: CD_29C96FE3708DDF22ABBE770FCB770099
....

=== Index binary-tree identifier strings

The page values in the index binary-tree (Index.btr) contain identifier strings
that map to object records. An example of an identifier strings is:

....
R_7F02F51F97C31228F1ADE773040492C4
....

The following the prefixes are known:

[cols="1,5",options="header"]
|===
| Prefix | Usage
| C |
| CD | Class definition
| CI | Class instance?
| CR | Class reference?
| I | Interface?
| IL | Interface?
| KI |
| KL |
| NS | Name space
| R | Registration? Reference?
|===

The values in the identifier string can contain segments seperated by '.' e.g.

....
R_889E073E24E009B2E955B1E9560E641E.625.860151.342
....

[cols="1,5",options="header"]
|===
| Segment index | Usage
| 0 | Type prefix and MD5 hash
2+| _Optional values_
| 1 | Objects data mappings page number
| 2 | Object record identifier
| 3 | Object record data size
|===

== Notes

Listing name spaces:

....
Get-WmiObject -namespace "root" -class "__Namespace" | Select Name
....

Listing classes:

....
Get-WmiObject -namespace root\cimv2 -list
....

=== CIM OOO

http://www.wbemsolutions.com/tutorials/DMTF/cim-ooo.html

=== CIM data types

http://www.wbemsolutions.com/tutorials/DMTF/meta-property.html

....
INTRINSIC DATA TYPE

INTERPRETATION

uint8	Unsigned 8-bit integer
sint8	Signed 8-bit integer
uint16	Unsigned 16-bit integer
sint16	Signed 16-bit integer
uint32	Unsigned 32-bit integer
sint32	Signed 32-bit integer
uint64	Unsigned 64-bit integer
sint64	Signed 64-bit integer
string	UCS-2 string
boolean	Boolean
real32	IEEE 4-byte floating-point
real64	IEEE 8-byte floating-point
datetime	A string containing a date-time
<classname> ref

Strongly typed reference
char16	16-bit UCS-2 character
....

:numbered!:
[appendix]
== References

`[DMTF]`

[cols="1,5",options="header"]
|===
| Title: | CIM Schema: Version 2.45.0
| URL: | http://www.dmtf.org/standards/cim/cim_schema_v2450
|===

`[FLAREWMI]`

[cols="1,5",options="header"]
|===
| Title: | Flare WMI project
| URL: | https://github.com/fireeye/flare-wmi
|===

`[MSDN]`

[cols="1,5",options="header"]
|===
| Title: | `[MS-WMIO]`: CimType
| URL: | https://msdn.microsoft.com/en-us/library/cc250928.aspx
|===

`[TECHNET]`

[cols="1,5",options="header"]
|===
| Title: | Technet: WMI Infrastructure
| URL: | https://technet.microsoft.com/en-us/library/ee198935.aspx
|===

`[TUNSTALL02]`

[cols="1,5",options="header"]
|===
| Title: | Developing WMI Solutions: A Guide to Windows Management Instrumentation
| Author(s): | Craig Tunstall, Gwyn Cole
| Date: | November 22, 2002
|===

[appendix]
== GNU Free Documentation License

Version 1.3, 3 November 2008
Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
<http://fsf.org/>

Everyone is permitted to copy and distribute verbatim copies of this license
document, but changing it is not allowed.

=== 0. PREAMBLE

The purpose of this License is to make a manual, textbook, or other functional
and useful document "free" in the sense of freedom: to assure everyone the
effective freedom to copy and redistribute it, with or without modifying it,
either commercially or noncommercially. Secondarily, this License preserves for
the author and publisher a way to get credit for their work, while not being
considered responsible for modifications made by others.

This License is a kind of "copyleft", which means that derivative works of the
document must themselves be free in the same sense. It complements the GNU
General Public License, which is a copyleft license designed for free software.

We have designed this License in order to use it for manuals for free software,
because free software needs free documentation: a free program should come with
manuals providing the same freedoms that the software does. But this License is
not limited to software manuals; it can be used for any textual work,
regardless of subject matter or whether it is published as a printed book. We
recommend this License principally for works whose purpose is instruction or
reference.

=== 1. APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work, in any medium, that contains
a notice placed by the copyright holder saying it can be distributed under the
terms of this License. Such a notice grants a world-wide, royalty-free license,
unlimited in duration, to use that work under the conditions stated herein. The
"Document", below, refers to any such manual or work. Any member of the public
is a licensee, and is addressed as "you". You accept the license if you copy,
modify or distribute the work in a way requiring permission under copyright law.

A "Modified Version" of the Document means any work containing the Document or
a portion of it, either copied verbatim, or with modifications and/or
translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of the
Document that deals exclusively with the relationship of the publishers or
authors of the Document to the Document's overall subject (or to related
matters) and contains nothing that could fall directly within that overall
subject. (Thus, if the Document is in part a textbook of mathematics, a
Secondary Section may not explain any mathematics.) The relationship could be a
matter of historical connection with the subject or with related matters, or of
legal, commercial, philosophical, ethical or political position regarding them.

The "Invariant Sections" are certain Secondary Sections whose titles are
designated, as being those of Invariant Sections, in the notice that says that
the Document is released under this License. If a section does not fit the
above definition of Secondary then it is not allowed to be designated as
Invariant. The Document may contain zero Invariant Sections. If the Document
does not identify any Invariant Sections then there are none.

The "Cover Texts" are certain short passages of text that are listed, as
Front-Cover Texts or Back-Cover Texts, in the notice that says that the
Document is released under this License. A Front-Cover Text may be at most 5
words, and a Back-Cover Text may be at most 25 words.

A "Transparent" copy of the Document means a machine-readable copy, represented
in a format whose specification is available to the general public, that is
suitable for revising the document straightforwardly with generic text editors
or (for images composed of pixels) generic paint programs or (for drawings)
some widely available drawing editor, and that is suitable for input to text
formatters or for automatic translation to a variety of formats suitable for
input to text formatters. A copy made in an otherwise Transparent file format
whose markup, or absence of markup, has been arranged to thwart or discourage
subsequent modification by readers is not Transparent. An image format is not
Transparent if used for any substantial amount of text. A copy that is not
"Transparent" is called "Opaque".

Examples of suitable formats for Transparent copies include plain ASCII without
markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly
available DTD, and standard-conforming simple HTML, PostScript or PDF designed
for human modification. Examples of transparent image formats include PNG, XCF
and JPG. Opaque formats include proprietary formats that can be read and edited
only by proprietary word processors, SGML or XML for which the DTD and/or
processing tools are not generally available, and the machine-generated HTML,
PostScript or PDF produced by some word processors for output purposes only.

The "Title Page" means, for a printed book, the title page itself, plus such
following pages as are needed to hold, legibly, the material this License
requires to appear in the title page. For works in formats which do not have
any title page as such, "Title Page" means the text near the most prominent
appearance of the work's title, preceding the beginning of the body of the text.

The "publisher" means any person or entity that distributes copies of the
Document to the public.

A section "Entitled XYZ" means a named subunit of the Document whose title
either is precisely XYZ or contains XYZ in parentheses following text that
translates XYZ in another language. (Here XYZ stands for a specific section
name mentioned below, such as "Acknowledgements", "Dedications",
"Endorsements", or "History".) To "Preserve the Title" of such a section when
you modify the Document means that it remains a section "Entitled XYZ"
according to this definition.

The Document may include Warranty Disclaimers next to the notice which states
that this License applies to the Document. These Warranty Disclaimers are
considered to be included by reference in this License, but only as regards
disclaiming warranties: any other implication that these Warranty Disclaimers
may have is void and has no effect on the meaning of this License.

=== 2. VERBATIM COPYING

You may copy and distribute the Document in any medium, either commercially or
noncommercially, provided that this License, the copyright notices, and the
license notice saying this License applies to the Document are reproduced in
all copies, and that you add no other conditions whatsoever to those of this
License. You may not use technical measures to obstruct or control the reading
or further copying of the copies you make or distribute. However, you may
accept compensation in exchange for copies. If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and you may
publicly display copies.

=== 3. COPYING IN QUANTITY

If you publish printed copies (or copies in media that commonly have printed
covers) of the Document, numbering more than 100, and the Document's license
notice requires Cover Texts, you must enclose the copies in covers that carry,
clearly and legibly, all these Cover Texts: Front-Cover Texts on the front
cover, and Back-Cover Texts on the back cover. Both covers must also clearly
and legibly identify you as the publisher of these copies. The front cover must
present the full title with all words of the title equally prominent and
visible. You may add other material on the covers in addition. Copying with
changes limited to the covers, as long as they preserve the title of the
Document and satisfy these conditions, can be treated as verbatim copying in
other respects.

If the required texts for either cover are too voluminous to fit legibly, you
should put the first ones listed (as many as fit reasonably) on the actual
cover, and continue the rest onto adjacent pages.

If you publish or distribute Opaque copies of the Document numbering more than
100, you must either include a machine-readable Transparent copy along with
each Opaque copy, or state in or with each Opaque copy a computer-network
location from which the general network-using public has access to download
using public-standard network protocols a complete Transparent copy of the
Document, free of added material. If you use the latter option, you must take
reasonably prudent steps, when you begin distribution of Opaque copies in
quantity, to ensure that this Transparent copy will remain thus accessible at
the stated location until at least one year after the last time you distribute
an Opaque copy (directly or through your agents or retailers) of that edition
to the public.

It is requested, but not required, that you contact the authors of the Document
well before redistributing any large number of copies, to give them a chance to
provide you with an updated version of the Document.

=== 4. MODIFICATIONS

You may copy and distribute a Modified Version of the Document under the
conditions of sections 2 and 3 above, provided that you release the Modified
Version under precisely this License, with the Modified Version filling the
role of the Document, thus licensing distribution and modification of the
Modified Version to whoever possesses a copy of it. In addition, you must do
these things in the Modified Version:

A. Use in the Title Page (and on the covers, if any) a title distinct from that
of the Document, and from those of previous versions (which should, if there
were any, be listed in the History section of the Document). You may use the
same title as a previous version if the original publisher of that version
gives permission.

B. List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified Version,
together with at least five of the principal authors of the Document (all of
its principal authors, if it has fewer than five), unless they release you from
this requirement.

C. State on the Title page the name of the publisher of the Modified Version,
as the publisher.

D. Preserve all the copyright notices of the Document.

E. Add an appropriate copyright notice for your modifications adjacent to the
other copyright notices.

F. Include, immediately after the copyright notices, a license notice giving
the public permission to use the Modified Version under the terms of this
License, in the form shown in the Addendum below.

G. Preserve in that license notice the full lists of Invariant Sections and
required Cover Texts given in the Document's license notice.

H. Include an unaltered copy of this License.

I. Preserve the section Entitled "History", Preserve its Title, and add to it
an item stating at least the title, year, new authors, and publisher of the
Modified Version as given on the Title Page. If there is no section Entitled
"History" in the Document, create one stating the title, year, authors, and
publisher of the Document as given on its Title Page, then add an item
describing the Modified Version as stated in the previous sentence.

J. Preserve the network location, if any, given in the Document for public
access to a Transparent copy of the Document, and likewise the network
locations given in the Document for previous versions it was based on. These
may be placed in the "History" section. You may omit a network location for a
work that was published at least four years before the Document itself, or if
the original publisher of the version it refers to gives permission.

K. For any section Entitled "Acknowledgements" or "Dedications", Preserve the
Title of the section, and preserve in the section all the substance and tone of
each of the contributor acknowledgements and/or dedications given therein.

L. Preserve all the Invariant Sections of the Document, unaltered in their text
and in their titles. Section numbers or the equivalent are not considered part
of the section titles.

M. Delete any section Entitled "Endorsements". Such a section may not be
included in the Modified Version.

N. Do not retitle any existing section to be Entitled "Endorsements" or to
conflict in title with any Invariant Section.

O. Preserve any Warranty Disclaimers.

If the Modified Version includes new front-matter sections or appendices that
qualify as Secondary Sections and contain no material copied from the Document,
you may at your option designate some or all of these sections as invariant. To
do this, add their titles to the list of Invariant Sections in the Modified
Version's license notice. These titles must be distinct from any other section
titles.

You may add a section Entitled "Endorsements", provided it contains nothing but
endorsements of your Modified Version by various parties—for example,
statements of peer review or that the text has been approved by an organization
as the authoritative definition of a standard.

You may add a passage of up to five words as a Front-Cover Text, and a passage
of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts
in the Modified Version. Only one passage of Front-Cover Text and one of
Back-Cover Text may be added by (or through arrangements made by) any one
entity. If the Document already includes a cover text for the same cover,
previously added by you or by arrangement made by the same entity you are
acting on behalf of, you may not add another; but you may replace the old one,
on explicit permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License give
permission to use their names for publicity for or to assert or imply
endorsement of any Modified Version.

=== 5. COMBINING DOCUMENTS

You may combine the Document with other documents released under this License,
under the terms defined in section 4 above for modified versions, provided that
you include in the combination all of the Invariant Sections of all of the
original documents, unmodified, and list them all as Invariant Sections of your
combined work in its license notice, and that you preserve all their Warranty
Disclaimers.

The combined work need only contain one copy of this License, and multiple
identical Invariant Sections may be replaced with a single copy. If there are
multiple Invariant Sections with the same name but different contents, make the
title of each such section unique by adding at the end of it, in parentheses,
the name of the original author or publisher of that section if known, or else
a unique number. Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled "History" in the
various original documents, forming one section Entitled "History"; likewise
combine any sections Entitled "Acknowledgements", and any sections Entitled
"Dedications". You must delete all sections Entitled "Endorsements".

=== 6. COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this License
in the various documents with a single copy that is included in the collection,
provided that you follow the rules of this License for verbatim copying of each
of the documents in all other respects.

You may extract a single document from such a collection, and distribute it
individually under this License, provided you insert a copy of this License
into the extracted document, and follow this License in all other respects
regarding verbatim copying of that document.

=== 7. AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate and
independent documents or works, in or on a volume of a storage or distribution
medium, is called an "aggregate" if the copyright resulting from the
compilation is not used to limit the legal rights of the compilation's users
beyond what the individual works permit. When the Document is included in an
aggregate, this License does not apply to the other works in the aggregate
which are not themselves derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these copies of the
Document, then if the Document is less than one half of the entire aggregate,
the Document's Cover Texts may be placed on covers that bracket the Document
within the aggregate, or the electronic equivalent of covers if the Document is
in electronic form. Otherwise they must appear on printed covers that bracket
the whole aggregate.

=== 8. TRANSLATION

Translation is considered a kind of modification, so you may distribute
translations of the Document under the terms of section 4. Replacing Invariant
Sections with translations requires special permission from their copyright
holders, but you may include translations of some or all Invariant Sections in
addition to the original versions of these Invariant Sections. You may include
a translation of this License, and all the license notices in the Document, and
any Warranty Disclaimers, provided that you also include the original English
version of this License and the original versions of those notices and
disclaimers. In case of a disagreement between the translation and the original
version of this License or a notice or disclaimer, the original version will
prevail.

If a section in the Document is Entitled "Acknowledgements", "Dedications", or
"History", the requirement (section 4) to Preserve its Title (section 1) will
typically require changing the actual title.

=== 9. TERMINATION

You may not copy, modify, sublicense, or distribute the Document except as
expressly provided under this License. Any attempt otherwise to copy, modify,
sublicense, or distribute it is void, and will automatically terminate your
rights under this License.

However, if you cease all violation of this License, then your license from a
particular copyright holder is reinstated (a) provisionally, unless and until
the copyright holder explicitly and finally terminates your license, and (b)
permanently, if the copyright holder fails to notify you of the violation by
some reasonable means prior to 60 days after the cessation.

Moreover, your license from a particular copyright holder is reinstated
permanently if the copyright holder notifies you of the violation by some
reasonable means, this is the first time you have received notice of violation
of this License (for any work) from that copyright holder, and you cure the
violation prior to 30 days after your receipt of the notice.

Termination of your rights under this section does not terminate the licenses
of parties who have received copies or rights from you under this License. If
your rights have been terminated and not permanently reinstated, receipt of a
copy of some or all of the same material does not give you any rights to use it.

=== 10. FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions of the GNU Free
Documentation License from time to time. Such new versions will be similar in
spirit to the present version, but may differ in detail to address new problems
or concerns. See http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number. If the
Document specifies that a particular numbered version of this License "or any
later version" applies to it, you have the option of following the terms and
conditions either of that specified version or of any later version that has
been published (not as a draft) by the Free Software Foundation. If the
Document does not specify a version number of this License, you may choose any
version ever published (not as a draft) by the Free Software Foundation. If the
Document specifies that a proxy can decide which future versions of this
License can be used, that proxy's public statement of acceptance of a version
permanently authorizes you to choose that version for the Document.

=== 11. RELICENSING

"Massive Multiauthor Collaboration Site" (or "MMC Site") means any World Wide
Web server that publishes copyrightable works and also provides prominent
facilities for anybody to edit those works. A public wiki that anybody can edit
is an example of such a server. A "Massive Multiauthor Collaboration" (or
"MMC") contained in the site means any set of copyrightable works thus
published on the MMC site.

"CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license
published by Creative Commons Corporation, a not-for-profit corporation with a
principal place of business in San Francisco, California, as well as future
copyleft versions of that license published by that same organization.

"Incorporate" means to publish or republish a Document, in whole or in part, as
part of another Document.

An MMC is "eligible for relicensing" if it is licensed under this License, and
if all works that were first published under this License somewhere other than
this MMC, and subsequently incorporated in whole or in part into the MMC, (1)
had no cover texts or invariant sections, and (2) were thus incorporated prior
to November 1, 2008.

The operator of an MMC Site may republish an MMC contained in the site under
CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC
is eligible for relicensing.

